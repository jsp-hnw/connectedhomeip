FROM --platform=linux/arm64 ubuntu:bionic as build

ARG USERNAME=humax
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG SDK_ROOT=/opt/cross
ENV USER_HOME /home/$USERNAME

RUN set -x \
    && apt-get update -y \
    && apt-get dist-upgrade -y \
    && DEBIAN_FRONTEND=noninteractive apt-get install -fy --fix-missing \
    build-essential gawk gcc g++ gfortran git texinfo bison libncurses-dev \
    libglib2.0 openssl \
    sudo \
    cmake wget nano vim rsync \
    && : # last line

RUN groupadd -g $USER_GID $USERNAME \
    && useradd -s /bin/bash -u $USER_UID -g $USER_GID -G sudo -m $USERNAME \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    && :

RUN mkdir -p $SDK_ROOT

## nc 10.2.0
# RUN wget https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Bonus%20Raspberry%20Pi%20GCC%2064-Bit%20Toolchains/Raspberry%20Pi%20GCC%2064-Bit%20Native-Compiler%20Toolchains/Buster/GCC%2010.2.0/native-gcc-10.2.0-pi_64.tar.gz
## nc 10.3.0
# RUN wget https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Bonus%20Raspberry%20Pi%20GCC%2064-Bit%20Toolchains/Raspberry%20Pi%20GCC%2064-Bit%20Native-Compiler%20Toolchains/Bullseye/GCC%2010.3.0/native-gcc-10.3.0-pi_64.tar.gz
## cc 8.3.0
# RUN wget https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Bonus%20Raspberry%20Pi%20GCC%2064-Bit%20Toolchains/Raspberry%20Pi%20GCC%2064-Bit%20Cross-Compiler%20Toolchains/Buster/GCC%208.3.0/cross-gcc-8.3.0-pi_64.tar.gz
## cc 10.3.0
# RUN wget https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Bonus%20Raspberry%20Pi%20GCC%2064-Bit%20Toolchains/Raspberry%20Pi%20GCC%2064-Bit%20Cross-Compiler%20Toolchains/Buster/GCC%2010.3.0/cross-gcc-10.3.0-pi_64.tar.gz

# RUN tar xf native-gcc-*.tar.gz
# RUN tar xf cross-gcc-*.tar.gz
# RUN mv native-pi-gcc* $SDK_ROOT
# RUN mv cross-pi-gcc* $SDK_ROOT

ADD native-gcc-10.3.0-pi_64.tar.gz $SDK_ROOT
#ADD cross-gcc-10.3.0-pi_64.tar.gz $SDK_ROOT
ADD cross-gcc-8.3.0-pi_64.tar.gz $SDK_ROOT
COPY rpi-nc /root/tmp/rpi-nc

RUN mkdir $SDK_ROOT/sysroot
RUN mkdir $SDK_ROOT/sysroot/usr
RUN mkdir $SDK_ROOT/sysroot/opt
RUN cd $SDK_ROOT \
    && rsync -avz --rsync-path="sudo rsync" --delete /lib sysroot \
    && rsync -avz --rsync-path="sudo rsync" --delete /usr/include sysroot/usr \
    && rsync -avz --rsync-path="sudo rsync" --delete /usr/lib sysroot/usr \
    && `#rsync -avz --rsync-path="sudo rsync" --delete /opt/vc sysroot/opt ` \
    && :

# copied from ubuntu-bionic-x86_86: openssl.pc libssl.pc libcrypto.pc
# aarch64-linux-gnu/openssl was renamed from x86_64-linux-gnu/openssl
COPY *.pc $SDK_ROOT/sysroot/usr/lib/aarch64-linux-gnu/pkgconfig/
COPY openssl/* $SDK_ROOT/sysroot/usr/include/aarch64-linux-gnu/openssl/
COPY aarch64-linux-gnu/openssl/* $SDK_ROOT/sysroot/usr/include/aarch64-linux-gnu/openssl/
# add the following line to fix compile error
#define G_SOURCE_FUNC(f) ((GSourceFunc) (void (*)(void)) (f))
COPY gmain.h $SDK_ROOT/sysroot/usr/include/glib-2.0/glib/

RUN wget https://raw.githubusercontent.com/abhiTronix/raspberry-pi-cross-compilers/master/utils/SSymlinker
RUN chmod +x SSymlinker
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/include/aarch64-linux-gnu/asm -d $SDK_ROOT/sysroot/usr/include
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/include/aarch64-linux-gnu/gnu -d $SDK_ROOT/sysroot/usr/include
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/include/aarch64-linux-gnu/bits -d $SDK_ROOT/sysroot/usr/include
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/include/aarch64-linux-gnu/sys -d $SDK_ROOT/sysroot/usr/include
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/include/aarch64-linux-gnu/openssl -d $SDK_ROOT/sysroot/usr/include
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/lib/aarch64-linux-gnu/crtn.o -d $SDK_ROOT/sysroot/usr/lib/crtn.o
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/lib/aarch64-linux-gnu/crt1.o -d $SDK_ROOT/sysroot/usr/lib/crt1.o
RUN ./SSymlinker -s $SDK_ROOT/sysroot/usr/lib/aarch64-linux-gnu/crti.o -d $SDK_ROOT/sysroot/usr/lib/crti.o

RUN cd $SDK_ROOT/sysroot/usr/lib/aarch64-linux-gnu && ln -sf libssl.so.1.1 libssl.so
RUN cd $SDK_ROOT/sysroot/usr/lib/aarch64-linux-gnu && ln -sf libcrypto.so.1.1 libcrypto.so
RUN cd $SDK_ROOT/sysroot/usr/lib && ln -sf aarch64-linux-gnu/Scrt1.o Scrt1.o
RUN cd $SDK_ROOT/sysroot \
    && wget https://raw.githubusercontent.com/abhiTronix/rpi_rootfs/master/scripts/sysroot-relativelinks.py \
    && chmod +x sysroot-relativelinks.py \
    && python3 sysroot-relativelinks.py .